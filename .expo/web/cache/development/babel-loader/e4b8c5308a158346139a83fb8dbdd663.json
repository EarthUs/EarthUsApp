{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jangsohyeon/Desktop/EarthUsApp/screens/FeedScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"firebase\";\nimport React, { Component } from \"react\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport List from \"../components/List\";\nimport Fire from \"../Fire\";\nvar PAGE_SIZE = 5;\nconsole.disableYellowBox = true;\n\nvar FeedScreen = function (_Component) {\n  _inherits(FeedScreen, _Component);\n\n  function FeedScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FeedScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FeedScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: false,\n      posts: [],\n      data: {}\n    };\n\n    _this.addPosts = function (posts) {\n      _this.setState(function (previousState) {\n        var data = _objectSpread({}, previousState.data, {}, posts);\n\n        return {\n          data: data,\n          posts: Object.values(data).sort(function (a, b) {\n            return a.timestamp < b.timestamp;\n          })\n        };\n      });\n    };\n\n    _this.makeRemoteRequest = function _callee(lastKey) {\n      var _await$Fire$shared$ge, data, cursor, posts, _iterator, _isArray, _i, _ref, _child;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.state.loading) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _this.setState({\n                loading: true\n              });\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Fire.shared.getPaged({\n                size: PAGE_SIZE,\n                start: lastKey\n              }));\n\n            case 5:\n              _await$Fire$shared$ge = _context.sent;\n              data = _await$Fire$shared$ge.data;\n              cursor = _await$Fire$shared$ge.cursor;\n              _this.lastKnownKey = cursor;\n              posts = {};\n              _iterator = data, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : \"@@iterator\" : \"@@iterator\" : \"@@iterator\"]();\n\n            case 11:\n              if (!_isArray) {\n                _context.next = 17;\n                break;\n              }\n\n              if (!(_i >= _iterator.length)) {\n                _context.next = 14;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 25);\n\n            case 14:\n              _ref = _iterator[_i++];\n              _context.next = 21;\n              break;\n\n            case 17:\n              _i = _iterator.next();\n\n              if (!_i.done) {\n                _context.next = 20;\n                break;\n              }\n\n              return _context.abrupt(\"break\", 25);\n\n            case 20:\n              _ref = _i.value;\n\n            case 21:\n              _child = _ref;\n              posts[_child.key] = _child;\n\n            case 23:\n              _context.next = 11;\n              break;\n\n            case 25:\n              _this.addPosts(posts);\n\n              _this.setState({\n                loading: false\n              });\n\n            case 27:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this._onRefresh = function () {\n      return _this.makeRemoteRequest();\n    };\n\n    _this.onPressFooter = function () {\n      return _this.makeRemoteRequest(_this.lastKnownKey);\n    };\n\n    return _this;\n  }\n\n  _createClass(FeedScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (Fire.shared.uid) {\n        this.makeRemoteRequest();\n      } else {\n        firebase.auth().onAuthStateChanged(function (user) {\n          if (user) {\n            _this2.makeRemoteRequest();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      LayoutAnimation.easeInEaseOut();\n      return React.createElement(List, {\n        refreshControl: React.createElement(RefreshControl, {\n          refreshing: this.state.loading,\n          onRefresh: this._onRefresh,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          }\n        }),\n        onPressFooter: this.onPressFooter,\n        data: this.state.posts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      });\n    }\n  }]);\n\n  return FeedScreen;\n}(Component);\n\nexport { FeedScreen as default };","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/screens/FeedScreen.js"],"names":["firebase","React","Component","List","Fire","PAGE_SIZE","console","disableYellowBox","FeedScreen","state","loading","posts","data","addPosts","setState","previousState","Object","values","sort","a","b","timestamp","makeRemoteRequest","lastKey","shared","getPaged","size","start","cursor","lastKnownKey","child","key","_onRefresh","onPressFooter","uid","auth","onAuthStateChanged","user","LayoutAnimation","easeInEaseOut"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\nimport React, { Component } from \"react\";\nimport { LayoutAnimation, RefreshControl } from \"react-native\";\n\nimport List from \"../components/List\";\nimport Fire from \"../Fire\";\n\n// Set the default number of images to load for each pagination.\nconst PAGE_SIZE = 5;\nconsole.disableYellowBox = true;\nexport default class FeedScreen extends Component {\n  state = {\n    loading: false,\n    posts: [],\n    data: {}\n  };\n\n  componentDidMount() {\n    // Check if we are signed in...\n    if (Fire.shared.uid) {\n      // If we are, then we can get the first 5 posts\n      this.makeRemoteRequest();\n    } else {\n      // If we aren't then we should just start observing changes. This will be called when the user signs in\n      firebase.auth().onAuthStateChanged(user => {\n        if (user) {\n          this.makeRemoteRequest();\n        }\n      });\n    }\n  }\n\n  // Append the item to our states `data` prop\n  addPosts = posts => {\n    this.setState(previousState => {\n      let data = {\n        ...previousState.data,\n        ...posts\n      };\n      return {\n        data,\n        // Sort the data by timestamp\n        posts: Object.values(data).sort((a, b) => a.timestamp < b.timestamp)\n      };\n    });\n  };\n\n  // Call our database and ask for a subset of the user posts\n  makeRemoteRequest = async lastKey => {\n    // If we are currently getting posts, then bail out..\n    if (this.state.loading) {\n      return;\n    }\n    this.setState({ loading: true });\n\n    // The data prop will be an array of posts, the cursor will be used for pagination.\n    const { data, cursor } = await Fire.shared.getPaged({\n      size: PAGE_SIZE,\n      start: lastKey\n    });\n\n    this.lastKnownKey = cursor;\n    // Iteratively add posts\n    let posts = {};\n    for (let child of data) {\n      posts[child.key] = child;\n    }\n    this.addPosts(posts);\n\n    // Finish loading, this will stop the refreshing animation.\n    this.setState({ loading: false });\n  };\n\n  // Because we want to get the most recent items, don't pass the cursor back.\n  // This will make the data base pull the most recent items.\n  _onRefresh = () => this.makeRemoteRequest();\n\n  // If we press the \"Load More...\" footer then get the next page of posts\n  onPressFooter = () => this.makeRemoteRequest(this.lastKnownKey);\n\n  render() {\n    // Let's make everything purrty by calling this method which animates layout changes.\n    LayoutAnimation.easeInEaseOut();\n    return (\n      <List\n        refreshControl={\n          <RefreshControl\n            refreshing={this.state.loading}\n            onRefresh={this._onRefresh}\n          />\n        }\n        onPressFooter={this.onPressFooter}\n        data={this.state.posts}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}