{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jangsohyeon/Desktop/EarthUsApp/node_modules/react-navigation-header-buttons/src/HeaderButton.js\";\nimport * as React from 'react';\nvar BUTTON_HIT_SLOP = {\n  top: 5,\n  bottom: 5,\n  left: 5,\n  right: 5\n};\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Touchable from 'react-native-platform-touchable';\nexport var HeaderButton = function (_React$PureComponent) {\n  _inherits(HeaderButton, _React$PureComponent);\n\n  function HeaderButton() {\n    _classCallCheck(this, HeaderButton);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(HeaderButton).apply(this, arguments));\n  }\n\n  _createClass(HeaderButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ButtonElement = _this$props.ButtonElement,\n          onPress = _this$props.onPress,\n          buttonWrapperStyle = _this$props.buttonWrapperStyle,\n          testID = _this$props.testID;\n      var RenderedComponent = !onPress ? View : Touchable;\n      return React.createElement(RenderedComponent, {\n        background: Touchable.SelectableBackgroundBorderless(),\n        onPress: onPress,\n        hitSlop: BUTTON_HIT_SLOP,\n        style: [styles.buttonContainer, buttonWrapperStyle],\n        testID: testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        }\n      }, ButtonElement));\n    }\n  }]);\n\n  return HeaderButton;\n}(React.PureComponent);\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/node_modules/react-navigation-header-buttons/src/HeaderButton.js"],"names":["React","BUTTON_HIT_SLOP","top","bottom","left","right","Touchable","HeaderButton","props","ButtonElement","onPress","buttonWrapperStyle","testID","RenderedComponent","View","SelectableBackgroundBorderless","styles","buttonContainer","PureComponent","StyleSheet","create","alignItems","justifyContent"],"mappings":";;;;;;AAGA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,IAAMC,eAAe,GAAG;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,MAAM,EAAE,CAAlB;AAAqBC,EAAAA,IAAI,EAAE,CAA3B;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAAxB;;;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AASA,WAAaC,YAAb;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAGW;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACCC,aADD,eACCA,aADD;AAAA,UACgBC,OADhB,eACgBA,OADhB;AAAA,UACyBC,kBADzB,eACyBA,kBADzB;AAAA,UAC6CC,MAD7C,eAC6CA,MAD7C;AAEP,UAAMC,iBAAiB,GAAG,CAACH,OAAD,GAAWI,IAAX,GAAkBR,SAA5C;AAEA,aACE,oBAAC,iBAAD;AACE,QAAA,UAAU,EAAEA,SAAS,CAACS,8BAAV,EADd;AAEE,QAAA,OAAO,EAAEL,OAFX;AAGE,QAAA,OAAO,EAAET,eAHX;AAIE,QAAA,KAAK,EAAE,CAACe,MAAM,CAACC,eAAR,EAAyBN,kBAAzB,CAJT;AAKE,QAAA,MAAM,EAAEC,MALV;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,aAAP,CAPF,CADF;AAWD;AAlBH;;AAAA;AAAA,EAAkCT,KAAK,CAACkB,aAAxC;AAqBA,IAAMF,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,eAAe,EAAE;AACfI,IAAAA,UAAU,EAAE,QADG;AAEfC,IAAAA,cAAc,EAAE;AAFD;AADc,CAAlB,CAAf","sourcesContent":["/**\n * @flow\n */\nimport * as React from 'react';\nconst BUTTON_HIT_SLOP = { top: 5, bottom: 5, left: 5, right: 5 };\nimport { StyleSheet, View } from 'react-native';\nimport Touchable from 'react-native-platform-touchable';\nimport type { StyleObj } from 'react-native/Libraries/StyleSheet/StyleSheetTypes';\n\nexport type HeaderButtonProps = {\n  onPress: ?() => any,\n  buttonWrapperStyle?: StyleObj,\n  testID?: string,\n};\n\nexport class HeaderButton extends React.PureComponent<\n  HeaderButtonProps & { ButtonElement: React.Node }\n> {\n  render() {\n    const { ButtonElement, onPress, buttonWrapperStyle, testID } = this.props;\n    const RenderedComponent = !onPress ? View : Touchable;\n\n    return (\n      <RenderedComponent\n        background={Touchable.SelectableBackgroundBorderless()}\n        onPress={onPress}\n        hitSlop={BUTTON_HIT_SLOP}\n        style={[styles.buttonContainer, buttonWrapperStyle]}\n        testID={testID}\n      >\n        <View>{ButtonElement}</View>\n      </RenderedComponent>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}