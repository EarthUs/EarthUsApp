{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport UUID from 'uuid-js';\nimport { guardPermission, getExponentPushTokenAsync as _getExponentPushTokenAsync, getDevicePushTokenAsync as _getDevicePushTokenAsync } from \"./ExponentNotificationsHelper.web\";\nimport \"./ExponentNotifications.fx.web\";\n\nfunction transformLocalNotification(notification, tag) {\n  var _notification$web = notification.web,\n      web = _notification$web === void 0 ? {} : _notification$web,\n      abstractNotification = _objectWithoutProperties(notification, [\"web\"]);\n\n  tag = web.tag || tag;\n\n  var nativeNotification = _objectSpread({}, abstractNotification, {\n    tag: tag\n  }, web, {\n    _isLocal: true\n  });\n\n  return [nativeNotification.title, nativeNotification];\n}\n\nfunction generateID() {\n  return UUID.create().toString();\n}\n\nfunction getRegistrationAsync() {\n  var registration;\n  return _regeneratorRuntime.async(function getRegistrationAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          guardPermission();\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(navigator.serviceWorker.getRegistration());\n\n        case 3:\n          registration = _context.sent;\n\n          if (registration) {\n            _context.next = 6;\n            break;\n          }\n\n          throw new Error('Failed to get notification registration!');\n\n        case 6:\n          return _context.abrupt(\"return\", registration);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}\n\nfunction getNotificationsAsync(tag) {\n  var registration, notifications;\n  return _regeneratorRuntime.async(function getNotificationsAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(getRegistrationAsync());\n\n        case 2:\n          registration = _context2.sent;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(registration.getNotifications(tag ? {\n            tag: tag\n          } : undefined));\n\n        case 5:\n          notifications = _context2.sent;\n          return _context2.abrupt(\"return\", notifications);\n\n        case 7:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  });\n}\n\nexport default {\n  presentLocalNotification: function presentLocalNotification(notification) {\n    var registration, tag;\n    return _regeneratorRuntime.async(function presentLocalNotification$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(getRegistrationAsync());\n\n          case 2:\n            registration = _context3.sent;\n            tag = generateID();\n            registration.showNotification.apply(registration, _toConsumableArray(transformLocalNotification(notification, tag)));\n            return _context3.abrupt(\"return\", tag);\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  },\n  scheduleLocalNotification: function scheduleLocalNotification(notification) {\n    var options,\n        registration,\n        tag,\n        intervalMs,\n        _args4 = arguments;\n    return _regeneratorRuntime.async(function scheduleLocalNotification$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n\n            if (!options.intervalMs) {\n              _context4.next = 10;\n              break;\n            }\n\n            _context4.next = 4;\n            return _regeneratorRuntime.awrap(getRegistrationAsync());\n\n          case 4:\n            registration = _context4.sent;\n            tag = generateID();\n            setTimeout(function () {\n              registration.showNotification.apply(registration, _toConsumableArray(transformLocalNotification(notification, tag)));\n            }, options.intervalMs);\n            return _context4.abrupt(\"return\", tag);\n\n          case 10:\n            if (!options.time) {\n              _context4.next = 15;\n              break;\n            }\n\n            intervalMs = options.time - Date.now();\n\n            if (!(intervalMs < 0)) {\n              _context4.next = 14;\n              break;\n            }\n\n            throw new Error('Expo.Notifications.scheduleLocalNotification(): options.time must be some time in the future.');\n\n          case 14:\n            return _context4.abrupt(\"return\", this.scheduleLocalNotification(notification, {\n              intervalMs: intervalMs\n            }));\n\n          case 15:\n            throw new Error(\"Expo.Notifications.scheduleLocalNotification() options \" + JSON.stringify(options, null, 2) + \" are not supported yet.\");\n\n          case 16:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, this);\n  },\n  dismissNotification: function dismissNotification(notificationId) {\n    var notifications, _iterator, _isArray, _i, _ref, _notification;\n\n    return _regeneratorRuntime.async(function dismissNotification$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(getNotificationsAsync(notificationId));\n\n          case 2:\n            notifications = _context5.sent;\n            _iterator = notifications, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : \"@@iterator\"]();\n\n          case 4:\n            if (!_isArray) {\n              _context5.next = 10;\n              break;\n            }\n\n            if (!(_i >= _iterator.length)) {\n              _context5.next = 7;\n              break;\n            }\n\n            return _context5.abrupt(\"break\", 18);\n\n          case 7:\n            _ref = _iterator[_i++];\n            _context5.next = 14;\n            break;\n\n          case 10:\n            _i = _iterator.next();\n\n            if (!_i.done) {\n              _context5.next = 13;\n              break;\n            }\n\n            return _context5.abrupt(\"break\", 18);\n\n          case 13:\n            _ref = _i.value;\n\n          case 14:\n            _notification = _ref;\n\n            _notification.close();\n\n          case 16:\n            _context5.next = 4;\n            break;\n\n          case 18:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  },\n  dismissAllNotifications: function dismissAllNotifications() {\n    return _regeneratorRuntime.async(function dismissAllNotifications$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            this.dismissNotification();\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, this);\n  },\n  cancelScheduledNotificationAsync: function cancelScheduledNotificationAsync(notificationId) {\n    return _regeneratorRuntime.async(function cancelScheduledNotificationAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            this.dismissNotification(notificationId);\n\n          case 1:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, this);\n  },\n  cancelAllScheduledNotificationsAsync: function cancelAllScheduledNotificationsAsync() {\n    return _regeneratorRuntime.async(function cancelAllScheduledNotificationsAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            this.dismissNotification();\n\n          case 1:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, null, this);\n  },\n  getExponentPushTokenAsync: function getExponentPushTokenAsync() {\n    return _regeneratorRuntime.async(function getExponentPushTokenAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.next = 2;\n            return _regeneratorRuntime.awrap(_getExponentPushTokenAsync());\n\n          case 2:\n            return _context9.abrupt(\"return\", _context9.sent);\n\n          case 3:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    });\n  },\n  getDevicePushTokenAsync: function getDevicePushTokenAsync() {\n    return _regeneratorRuntime.async(function getDevicePushTokenAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return _regeneratorRuntime.awrap(_getDevicePushTokenAsync());\n\n          case 2:\n            return _context10.abrupt(\"return\", _context10.sent);\n\n          case 3:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    });\n  }\n};","map":{"version":3,"sources":["../../src/Notifications/ExponentNotifications.web.ts"],"names":[],"mappings":"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","sourcesContent":["import UUID from 'uuid-js';\n\nimport { LocalNotification, LocalNotificationId } from './Notifications.types';\nimport {\n  guardPermission,\n  getExponentPushTokenAsync,\n  getDevicePushTokenAsync,\n} from './ExponentNotificationsHelper.web';\n\n// Register `message`'s event listener (side-effect)\nimport './ExponentNotifications.fx.web';\n\nfunction transformLocalNotification(\n  notification: LocalNotification,\n  tag: string\n): [string, NotificationOptions] {\n  const { web = {}, ...abstractNotification } = notification;\n  tag = web.tag || tag;\n  const nativeNotification = {\n    ...abstractNotification,\n    tag,\n    ...web,\n    // Show that this notification is a local notification\n    _isLocal: true,\n  };\n  return [nativeNotification.title, nativeNotification];\n}\n\nfunction generateID(): string {\n  return UUID.create().toString();\n}\n\nasync function getRegistrationAsync(): Promise<ServiceWorkerRegistration> {\n  guardPermission();\n  const registration = await navigator.serviceWorker.getRegistration();\n  if (!registration) {\n    throw new Error('Failed to get notification registration!');\n  }\n  return registration;\n}\n\nasync function getNotificationsAsync(tag?: string): Promise<Notification[]> {\n  const registration = await getRegistrationAsync();\n  const notifications = await registration.getNotifications(tag ? { tag } : undefined);\n  return notifications;\n}\n\nexport default {\n  async presentLocalNotification(notification: LocalNotification): Promise<LocalNotificationId> {\n    const registration = await getRegistrationAsync();\n    const tag = generateID();\n    registration.showNotification(...transformLocalNotification(notification, tag));\n    return tag;\n  },\n  async scheduleLocalNotification(\n    notification: any,\n    options: {\n      time?: Date | number;\n      repeat?: 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n      intervalMs?: number;\n    } = {}\n  ): Promise<string> {\n    if (options.intervalMs) {\n      const registration = await getRegistrationAsync();\n      const tag = generateID();\n      setTimeout(() => {\n        registration.showNotification(...transformLocalNotification(notification, tag));\n      }, options.intervalMs);\n      return tag;\n    } else if (options.time) {\n      const intervalMs = (options.time as number) - Date.now();\n      if (intervalMs < 0) {\n        throw new Error(\n          'Expo.Notifications.scheduleLocalNotification(): options.time must be some time in the future.'\n        );\n      }\n      return this.scheduleLocalNotification(notification, {\n        intervalMs,\n      });\n    }\n    throw new Error(\n      `Expo.Notifications.scheduleLocalNotification() options ${JSON.stringify(\n        options,\n        null,\n        2\n      )} are not supported yet.`\n    );\n  },\n\n  async dismissNotification(notificationId?: string): Promise<void> {\n    const notifications = await getNotificationsAsync(notificationId);\n    for (const notification of notifications) {\n      notification.close();\n    }\n  },\n  async dismissAllNotifications(): Promise<void> {\n    this.dismissNotification();\n  },\n  async cancelScheduledNotificationAsync(notificationId: string): Promise<void> {\n    this.dismissNotification(notificationId);\n  },\n  async cancelAllScheduledNotificationsAsync(): Promise<void> {\n    this.dismissNotification();\n  },\n\n  async getExponentPushTokenAsync(): Promise<string> {\n    return await getExponentPushTokenAsync();\n  },\n\n  async getDevicePushTokenAsync(): Promise<{ type: string; data: Object }> {\n    return await getDevicePushTokenAsync();\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}