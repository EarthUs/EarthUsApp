{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport uuid from 'uuid';\nimport getUserInfo from \"./utils/getUserInfo\";\nimport shrinkImageAsync from \"./utils/shrinkImageAsync\";\nimport uploadPhoto from \"./utils/uploadPhoto\";\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar collectionName = 'earthus-90e16';\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.getPaged = function _callee(_ref) {\n      var size, start, ref, querySnapshot, data, lastVisible, message;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              size = _ref.size, start = _ref.start;\n              ref = _this.collection.orderBy('timestamp', 'desc').limit(size);\n              _context.prev = 2;\n\n              if (start) {\n                ref = ref.startAfter(start);\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(ref.get());\n\n            case 6:\n              querySnapshot = _context.sent;\n              data = [];\n              querySnapshot.forEach(function (doc) {\n                if (doc.exists) {\n                  var post = doc.data() || {};\n                  var user = post.user || {};\n                  var name = user.deviceName;\n\n                  var reduced = _objectSpread({\n                    key: doc.id,\n                    name: (name || 'Secret Duck').trim()\n                  }, post);\n\n                  data.push(reduced);\n                }\n              });\n              lastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\n              return _context.abrupt(\"return\", {\n                data: data,\n                cursor: lastVisible\n              });\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n              message = _context.t0.message;\n              alert(message);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 13]]);\n    };\n\n    this.uploadPhotoAsync = function _callee2(uri) {\n      var path;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              path = collectionName + \"/\" + _this.uid + \"/\" + uuid.v4() + \".jpg\";\n              return _context2.abrupt(\"return\", uploadPhoto(uri, path));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    this.post = function _callee3(_ref3) {\n      var text, localUri, _await$shrinkImageAsy, reducedImage, width, height, remoteUri, message;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              text = _ref3.text, localUri = _ref3.image;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(shrinkImageAsync(localUri));\n\n            case 4:\n              _await$shrinkImageAsy = _context3.sent;\n              reducedImage = _await$shrinkImageAsy.uri;\n              width = _await$shrinkImageAsy.width;\n              height = _await$shrinkImageAsy.height;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(_this.uploadPhotoAsync(reducedImage));\n\n            case 10:\n              remoteUri = _context3.sent;\n\n              _this.collection.add({\n                text: text,\n                uid: _this.uid,\n                timestamp: _this.timestamp,\n                imageWidth: width,\n                imageHeight: height,\n                image: remoteUri,\n                user: getUserInfo()\n              }).then(function () {\n                console.log(\"Document written Uri: \" + localUri);\n                var body = new FormData();\n                body.append(\"images_file\", localUri);\n                body.append(\"\", \"\\\\\");\n                body.append(\"classifier_ids\", \"garbage_1414697122\");\n                body.append(\"\", \"\\\\\");\n                fetch(\"https://api.us-south.visual-recognition.watson.cloud.ibm.com/instances/54d6afb1-4cee-4741-978c-bfd607d86702/v3/classify?version=2018-03-19\", {\n                  body: body,\n                  headers: {\n                    Authorization: \"Basic YXBpa2V5OjlKQWxsZk1uOEpjdk9pank0M0Q3dngwbC1keVNzbC1fMmFmOXVuQVYtVnph\",\n                    \"Content-Type\": \"multipart/form-data\"\n                  },\n                  method: \"POST\"\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (json) {\n                  console.log(json);\n                });\n              });\n\n              _context3.next = 18;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](1);\n              message = _context3.t0.message;\n              alert(message);\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 14]]);\n    };\n\n    firebase.initializeApp({\n      apiKey: \"AIzaSyA0Ts68-a6uv8WtppxD1PTKhhr84NY0_a4\",\n      authDomain: \"earthus-90e16.firebaseapp.com\",\n      databaseURL: \"https://earthus-90e16.firebaseio.com\",\n      projectId: \"earthus-90e16\",\n      storageBucket: \"earthus-90e16.appspot.com\",\n      messagingSenderId: \"715002742933\",\n      appId: \"1:715002742933:web:a23a69b13a9674cfdd739c\",\n      measurementId: \"G-N9529T7NSZ\"\n    });\n    firebase.firestore().settings({\n      timestampsInSnapshots: true\n    });\n    firebase.auth().onAuthStateChanged(function _callee4(user) {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (user) {\n                _context4.next = 3;\n                break;\n              }\n\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    });\n  }\n\n  _createClass(Fire, [{\n    key: \"collection\",\n    get: function get() {\n      return firebase.firestore().collection(collectionName);\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }, {\n    key: \"timestamp\",\n    get: function get() {\n      return Date.now();\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/Fire.js"],"names":["uuid","getUserInfo","shrinkImageAsync","uploadPhoto","firebase","require","collectionName","Fire","getPaged","size","start","ref","collection","orderBy","limit","startAfter","get","querySnapshot","data","forEach","doc","exists","post","user","name","deviceName","reduced","key","id","trim","push","lastVisible","docs","length","cursor","message","alert","uploadPhotoAsync","uri","path","uid","v4","text","localUri","image","reducedImage","width","height","remoteUri","add","timestamp","imageWidth","imageHeight","then","console","log","body","FormData","append","fetch","headers","Authorization","method","response","json","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","auth","onAuthStateChanged","signInAnonymously","currentUser","Date","now","shared"],"mappings":"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","sourcesContent":["import uuid from 'uuid';\n\nimport getUserInfo from './utils/getUserInfo';\nimport shrinkImageAsync from './utils/shrinkImageAsync';\nimport uploadPhoto from './utils/uploadPhoto';\n\nconst firebase = require('firebase');\n// Required for side-effects\nrequire('firebase/firestore');\n\nconst collectionName = 'earthus-90e16';\n\nclass Fire {\n  constructor() {\n    firebase.initializeApp({\n      apiKey: \"AIzaSyA0Ts68-a6uv8WtppxD1PTKhhr84NY0_a4\",\n      authDomain: \"earthus-90e16.firebaseapp.com\",\n      databaseURL: \"https://earthus-90e16.firebaseio.com\",\n      projectId: \"earthus-90e16\",\n      storageBucket: \"earthus-90e16.appspot.com\",\n      messagingSenderId: \"715002742933\",\n      appId: \"1:715002742933:web:a23a69b13a9674cfdd739c\",\n      measurementId: \"G-N9529T7NSZ\"\n    });\n    // Some nonsense...\n    firebase.firestore().settings({ timestampsInSnapshots: true });\n\n    // Listen for auth\n    firebase.auth().onAuthStateChanged(async user => {\n      if (!user) {\n        await firebase.auth().signInAnonymously();\n      }\n    });\n  }\n\n  // Download Data\n  getPaged = async ({ size, start }) => {\n    let ref = this.collection.orderBy('timestamp', 'desc').limit(size);\n    try {\n      if (start) {\n        ref = ref.startAfter(start);\n      }\n\n      const querySnapshot = await ref.get();\n      const data = [];\n      querySnapshot.forEach(function (doc) {\n        if (doc.exists) {\n          const post = doc.data() || {};\n\n          // Reduce the name\n          const user = post.user || {};\n\n          const name = user.deviceName;\n          const reduced = {\n            key: doc.id,\n            name: (name || 'Secret Duck').trim(),\n            ...post,\n          };\n          data.push(reduced);\n        }\n      });\n\n      const lastVisible = querySnapshot.docs[querySnapshot.docs.length - 1];\n      return { data, cursor: lastVisible };\n    } catch ({ message }) {\n      alert(message);\n    }\n  };\n\n  // Upload Data\n  uploadPhotoAsync = async uri => {\n    const path = `${collectionName}/${this.uid}/${uuid.v4()}.jpg`;\n    return uploadPhoto(uri, path);\n  };\n\n  post = async ({ text, image: localUri }) => {\n    try {\n      const { uri: reducedImage, width, height } = await shrinkImageAsync(\n        localUri,\n      );\n\n      const remoteUri = await this.uploadPhotoAsync(reducedImage);\n      this.collection.add({\n        text,\n        uid: this.uid,\n        timestamp: this.timestamp,\n        imageWidth: width,\n        imageHeight: height,\n        image: remoteUri,\n        user: getUserInfo(),\n      }).then(() => {\n        console.log(\"Document written Uri: \" + localUri);\n        \n        const body = new FormData\n        body.append(\"images_file\", localUri)\n        body.append(\"\", \"\\\\\")\n        body.append(\"classifier_ids\", \"garbage_1414697122\")\n        body.append(\"\", \"\\\\\")\n\n        fetch(\"https://api.us-south.visual-recognition.watson.cloud.ibm.com/instances/54d6afb1-4cee-4741-978c-bfd607d86702/v3/classify?version=2018-03-19\", {\n          body,\n          headers: {\n            Authorization: \"Basic YXBpa2V5OjlKQWxsZk1uOEpjdk9pank0M0Q3dngwbC1keVNzbC1fMmFmOXVuQVYtVnph\",\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          method: \"POST\"\n        })\n          .then(response => response.json())\n          .then(json => {\n            // 받은 json으로 기능 구현\n            console.log(json);\n          });\n      });\n\n\n    } catch ({ message }) {\n      alert(message);\n    }\n  };\n\n  // Helpers\n  get collection() {\n    return firebase.firestore().collection(collectionName);\n  }\n\n  get uid() {\n    return (firebase.auth().currentUser || {}).uid;\n  }\n  get timestamp() {\n    return Date.now();\n  }\n}\n\nFire.shared = new Fire();\nexport default Fire;\n"]},"metadata":{},"sourceType":"module"}