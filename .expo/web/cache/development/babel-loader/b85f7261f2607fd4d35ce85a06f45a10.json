{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jangsohyeon/Desktop/EarthUsApp/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/TabView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TabBar from \"./TabBar\";\nimport PagerDefault from \"./PagerDefault\";\nimport { NavigationStatePropType } from \"./PropTypes\";\n\nvar TabView = function (_React$Component) {\n  _inherits(TabView, _React$Component);\n\n  function TabView(_props) {\n    var _this;\n\n    _classCallCheck(this, TabView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TabView).call(this, _props));\n    _this._mounted = false;\n\n    _this._renderScene = function (props) {\n      return _this.props.renderScene(props);\n    };\n\n    _this._handleLayout = function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          height = _e$nativeEvent$layout.height,\n          width = _e$nativeEvent$layout.width;\n\n      if (_this.state.layout.width === width && _this.state.layout.height === height) {\n        return;\n      }\n\n      _this.state.offsetX.setValue(-_this.props.navigationState.index * width);\n\n      _this.state.layoutXY.setValue({\n        x: width || 0.001,\n        y: height || 0.001\n      });\n\n      _this.setState({\n        layout: {\n          measured: true,\n          height: height,\n          width: width\n        }\n      });\n    };\n\n    _this._buildSceneRendererProps = function () {\n      return {\n        panX: _this.state.panX,\n        offsetX: _this.state.offsetX,\n        position: _this.state.position,\n        layout: _this.state.layout,\n        navigationState: _this.props.navigationState,\n        jumpTo: _this._jumpTo,\n        useNativeDriver: _this.props.useNativeDriver === true\n      };\n    };\n\n    _this._jumpTo = function (key) {\n      if (!_this._mounted) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          canJumpToTab = _this$props.canJumpToTab,\n          navigationState = _this$props.navigationState;\n      var index = navigationState.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n\n      if (!canJumpToTab(navigationState.routes[index])) {\n        return;\n      }\n\n      if (index !== navigationState.index) {\n        _this.props.onIndexChange(index);\n      }\n    };\n\n    var _navigationState = _this.props.navigationState;\n\n    var layout = _objectSpread({}, _this.props.initialLayout, {\n      measured: false\n    });\n\n    var panX = new Animated.Value(0);\n    var offsetX = new Animated.Value(-_navigationState.index * layout.width);\n    var layoutXY = new Animated.ValueXY({\n      x: layout.width || 0.001,\n      y: layout.height || 0.001\n    });\n    var position = Animated.multiply(Animated.divide(Animated.add(panX, offsetX), layoutXY.x), -1);\n    _this.state = {\n      layout: layout,\n      layoutXY: layoutXY,\n      panX: panX,\n      offsetX: offsetX,\n      position: position,\n      renderUnfocusedScenes: false\n    };\n    return _this;\n  }\n\n  _createClass(TabView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._mounted = true;\n      setTimeout(function () {\n        return _this2.setState({\n          renderUnfocusedScenes: true\n        });\n      }, 0);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          navigationState = _this$props2.navigationState,\n          onIndexChange = _this$props2.onIndexChange,\n          initialLayout = _this$props2.initialLayout,\n          renderScene = _this$props2.renderScene,\n          renderPager = _this$props2.renderPager,\n          renderTabBar = _this$props2.renderTabBar,\n          tabBarPosition = _this$props2.tabBarPosition,\n          rest = _objectWithoutProperties(_this$props2, [\"navigationState\", \"onIndexChange\", \"initialLayout\", \"renderScene\", \"renderPager\", \"renderTabBar\", \"tabBarPosition\"]);\n\n      var props = this._buildSceneRendererProps();\n\n      return React.createElement(View, {\n        collapsable: false,\n        style: [styles.container, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        }\n      }, tabBarPosition === 'top' && renderTabBar(props), React.createElement(View, {\n        onLayout: this._handleLayout,\n        style: styles.pager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      }, renderPager(_objectSpread({}, props, {}, rest, {\n        panX: this.state.panX,\n        offsetX: this.state.offsetX,\n        children: navigationState.routes.map(function (route, index) {\n          var isFocused = _this3.props.navigationState.index === index;\n          var scene;\n\n          if (isFocused || _this3.state.renderUnfocusedScenes) {\n            scene = _this3._renderScene(_objectSpread({}, props, {\n              route: route\n            }));\n          } else {\n            scene = React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 208\n              }\n            });\n          }\n\n          if (React.isValidElement(scene)) {\n            scene = React.cloneElement(scene, {\n              key: route.key\n            });\n          }\n\n          return scene;\n        })\n      }))), tabBarPosition === 'bottom' && renderTabBar(props));\n    }\n  }]);\n\n  return TabView;\n}(React.Component);\n\nTabView.propTypes = {\n  navigationState: NavigationStatePropType.isRequired,\n  onIndexChange: PropTypes.func.isRequired,\n  initialLayout: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n  }),\n  canJumpToTab: PropTypes.func.isRequired,\n  renderPager: PropTypes.func.isRequired,\n  renderScene: PropTypes.func.isRequired,\n  renderTabBar: PropTypes.func,\n  tabBarPosition: PropTypes.oneOf(['top', 'bottom'])\n};\nTabView.defaultProps = {\n  canJumpToTab: function canJumpToTab() {\n    return true;\n  },\n  tabBarPosition: 'top',\n  renderTabBar: function renderTabBar(props) {\n    return React.createElement(TabBar, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      }\n    }));\n  },\n  renderPager: function renderPager(props) {\n    return React.createElement(PagerDefault, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      }\n    }));\n  },\n  getTestID: function getTestID(_ref) {\n    var route = _ref.route;\n    return typeof route.testID === 'string' ? route.testID : undefined;\n  },\n  initialLayout: {\n    height: 0,\n    width: 0\n  },\n  useNativeDriver: false\n};\nexport { TabView as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  pager: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/node_modules/react-navigation-tabs/node_modules/react-native-tab-view/src/TabView.js"],"names":["React","PropTypes","TabBar","PagerDefault","NavigationStatePropType","TabView","props","_mounted","_renderScene","renderScene","_handleLayout","e","nativeEvent","layout","height","width","state","offsetX","setValue","navigationState","index","layoutXY","x","y","setState","measured","_buildSceneRendererProps","panX","position","jumpTo","_jumpTo","useNativeDriver","key","canJumpToTab","routes","findIndex","route","onIndexChange","initialLayout","Animated","Value","ValueXY","multiply","divide","add","renderUnfocusedScenes","setTimeout","renderPager","renderTabBar","tabBarPosition","rest","styles","container","style","pager","children","map","isFocused","scene","isValidElement","cloneElement","Component","propTypes","isRequired","func","shape","number","oneOf","defaultProps","getTestID","testID","undefined","StyleSheet","create","flex","overflow"],"mappings":";;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;AAEA,OAAOC,MAAP;AACA,OAAOC,YAAP;AACA,SAASC,uBAAT;;IAiCqBC,O;;;AA6BnB,mBAAYC,MAAZ,EAA6B;AAAA;;AAAA;;AAC3B,iFAAMA,MAAN;AAD2B,UA0C7BC,QA1C6B,GA0CT,KA1CS;;AAAA,UA6C7BC,YA7C6B,GA6Cd,UAACF,KAAD,EAA6C;AAC1D,aAAO,MAAKA,KAAL,CAAWG,WAAX,CAAuBH,KAAvB,CAAP;AACD,KA/C4B;;AAAA,UAiD7BI,aAjD6B,GAiDb,UAACC,CAAD,EAAY;AAAA,kCACAA,CAAC,CAACC,WAAF,CAAcC,MADd;AAAA,UAClBC,MADkB,yBAClBA,MADkB;AAAA,UACVC,KADU,yBACVA,KADU;;AAG1B,UACE,MAAKC,KAAL,CAAWH,MAAX,CAAkBE,KAAlB,KAA4BA,KAA5B,IACA,MAAKC,KAAL,CAAWH,MAAX,CAAkBC,MAAlB,KAA6BA,MAF/B,EAGE;AACA;AACD;;AAED,YAAKE,KAAL,CAAWC,OAAX,CAAmBC,QAAnB,CAA4B,CAAC,MAAKZ,KAAL,CAAWa,eAAX,CAA2BC,KAA5B,GAAoCL,KAAhE;;AACA,YAAKC,KAAL,CAAWK,QAAX,CAAoBH,QAApB,CAA6B;AAE3BI,QAAAA,CAAC,EAAEP,KAAK,IAAI,KAFe;AAG3BQ,QAAAA,CAAC,EAAET,MAAM,IAAI;AAHc,OAA7B;;AAKA,YAAKU,QAAL,CAAc;AACZX,QAAAA,MAAM,EAAE;AACNY,UAAAA,QAAQ,EAAE,IADJ;AAENX,UAAAA,MAAM,EAANA,MAFM;AAGNC,UAAAA,KAAK,EAALA;AAHM;AADI,OAAd;AAOD,KAxE4B;;AAAA,UA0E7BW,wBA1E6B,GA0EF;AAAA,aAA8B;AACvDC,QAAAA,IAAI,EAAE,MAAKX,KAAL,CAAWW,IADsC;AAEvDV,QAAAA,OAAO,EAAE,MAAKD,KAAL,CAAWC,OAFmC;AAGvDW,QAAAA,QAAQ,EAAE,MAAKZ,KAAL,CAAWY,QAHkC;AAIvDf,QAAAA,MAAM,EAAE,MAAKG,KAAL,CAAWH,MAJoC;AAKvDM,QAAAA,eAAe,EAAE,MAAKb,KAAL,CAAWa,eAL2B;AAMvDU,QAAAA,MAAM,EAAE,MAAKC,OAN0C;AAOvDC,QAAAA,eAAe,EAAE,MAAKzB,KAAL,CAAWyB,eAAX,KAA+B;AAPO,OAA9B;AAAA,KA1EE;;AAAA,UAoF7BD,OApF6B,GAoFnB,UAACE,GAAD,EAAiB;AACzB,UAAI,CAAC,MAAKzB,QAAV,EAAoB;AAElB;AACD;;AAJwB,wBAMiB,MAAKD,KANtB;AAAA,UAMjB2B,YANiB,eAMjBA,YANiB;AAAA,UAMHd,eANG,eAMHA,eANG;AAOzB,UAAMC,KAAK,GAAGD,eAAe,CAACe,MAAhB,CAAuBC,SAAvB,CAAiC,UAAAC,KAAK;AAAA,eAAIA,KAAK,CAACJ,GAAN,KAAcA,GAAlB;AAAA,OAAtC,CAAd;;AAEA,UAAI,CAACC,YAAY,CAACd,eAAe,CAACe,MAAhB,CAAuBd,KAAvB,CAAD,CAAjB,EAAkD;AAChD;AACD;;AAED,UAAIA,KAAK,KAAKD,eAAe,CAACC,KAA9B,EAAqC;AACnC,cAAKd,KAAL,CAAW+B,aAAX,CAAyBjB,KAAzB;AACD;AACF,KApG4B;;AAAA,QAGnBD,gBAHmB,GAGC,MAAKb,KAHN,CAGnBa,eAHmB;;AAI3B,QAAMN,MAAM,qBACP,MAAKP,KAAL,CAAWgC,aADJ;AAEVb,MAAAA,QAAQ,EAAE;AAFA,MAAZ;;AAKA,QAAME,IAAI,GAAG,IAAIY,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb;AACA,QAAMvB,OAAO,GAAG,IAAIsB,QAAQ,CAACC,KAAb,CAAmB,CAACrB,gBAAe,CAACC,KAAjB,GAAyBP,MAAM,CAACE,KAAnD,CAAhB;AACA,QAAMM,QAAQ,GAAG,IAAIkB,QAAQ,CAACE,OAAb,CAAqB;AAEpCnB,MAAAA,CAAC,EAAET,MAAM,CAACE,KAAP,IAAgB,KAFiB;AAGpCQ,MAAAA,CAAC,EAAEV,MAAM,CAACC,MAAP,IAAiB;AAHgB,KAArB,CAAjB;AAKA,QAAMc,QAAQ,GAAGW,QAAQ,CAACG,QAAT,CACfH,QAAQ,CAACI,MAAT,CAAgBJ,QAAQ,CAACK,GAAT,CAAajB,IAAb,EAAmBV,OAAnB,CAAhB,EAA6CI,QAAQ,CAACC,CAAtD,CADe,EAEf,CAAC,CAFc,CAAjB;AAKA,UAAKN,KAAL,GAAa;AACXH,MAAAA,MAAM,EAANA,MADW;AAEXQ,MAAAA,QAAQ,EAARA,QAFW;AAGXM,MAAAA,IAAI,EAAJA,IAHW;AAIXV,MAAAA,OAAO,EAAPA,OAJW;AAKXW,MAAAA,QAAQ,EAARA,QALW;AAMXiB,MAAAA,qBAAqB,EAAE;AANZ,KAAb;AArB2B;AA6B5B;;;;wCAEmB;AAAA;;AAClB,WAAKtC,QAAL,GAAgB,IAAhB;AAGAuC,MAAAA,UAAU,CAAC;AAAA,eAAM,MAAI,CAACtB,QAAL,CAAc;AAAEqB,UAAAA,qBAAqB,EAAE;AAAzB,SAAd,CAAN;AAAA,OAAD,EAAuD,CAAvD,CAAV;AACD;;;2CAEsB;AACrB,WAAKtC,QAAL,GAAgB,KAAhB;AACD;;;6BA8DQ;AAAA;;AAAA,yBAYH,KAAKD,KAZF;AAAA,UAGLa,eAHK,gBAGLA,eAHK;AAAA,UAILkB,aAJK,gBAILA,aAJK;AAAA,UAKLC,aALK,gBAKLA,aALK;AAAA,UAML7B,WANK,gBAMLA,WANK;AAAA,UAQLsC,WARK,gBAQLA,WARK;AAAA,UASLC,YATK,gBASLA,YATK;AAAA,UAULC,cAVK,gBAULA,cAVK;AAAA,UAWFC,IAXE;;AAcP,UAAM5C,KAAK,GAAG,KAAKoB,wBAAL,EAAd;;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,WAAW,EAAE,KAAnB;AAA0B,QAAA,KAAK,EAAE,CAACyB,MAAM,CAACC,SAAR,EAAmB,KAAK9C,KAAL,CAAW+C,KAA9B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,cAAc,KAAK,KAAnB,IAA4BD,YAAY,CAAC1C,KAAD,CAD3C,EAEE,oBAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKI,aAArB;AAAoC,QAAA,KAAK,EAAEyC,MAAM,CAACG,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,WAAW,mBACPzC,KADO,MAEP4C,IAFO;AAGVvB,QAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW,IAHP;AAIVV,QAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAJV;AAKVsC,QAAAA,QAAQ,EAAEpC,eAAe,CAACe,MAAhB,CAAuBsB,GAAvB,CAA2B,UAACpB,KAAD,EAAQhB,KAAR,EAAkB;AACrD,cAAMqC,SAAS,GAAG,MAAI,CAACnD,KAAL,CAAWa,eAAX,CAA2BC,KAA3B,KAAqCA,KAAvD;AAEA,cAAIsC,KAAJ;;AAEA,cAAID,SAAS,IAAI,MAAI,CAACzC,KAAL,CAAW6B,qBAA5B,EAAmD;AACjDa,YAAAA,KAAK,GAAG,MAAI,CAAClD,YAAL,mBACHF,KADG;AAEN8B,cAAAA,KAAK,EAALA;AAFM,eAAR;AAID,WALD,MAKO;AACLsB,YAAAA,KAAK,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACD;;AAED,cAAI1D,KAAK,CAAC2D,cAAN,CAAqBD,KAArB,CAAJ,EAAiC;AAE/BA,YAAAA,KAAK,GAAG1D,KAAK,CAAC4D,YAAN,CAAmBF,KAAnB,EAA0B;AAAE1B,cAAAA,GAAG,EAAEI,KAAK,CAACJ;AAAb,aAA1B,CAAR;AACD;;AAED,iBAAO0B,KAAP;AACD,SApBS;AALA,SADd,CAFF,EA+BGT,cAAc,KAAK,QAAnB,IAA+BD,YAAY,CAAC1C,KAAD,CA/B9C,CADF;AAmCD;;;;EAtLwCN,KAAK,CAAC6D,S;;AAA5BxD,O,CACZyD,S,GAAY;AACjB3C,EAAAA,eAAe,EAAEf,uBAAuB,CAAC2D,UADxB;AAEjB1B,EAAAA,aAAa,EAAEpC,SAAS,CAAC+D,IAAV,CAAeD,UAFb;AAGjBzB,EAAAA,aAAa,EAAErC,SAAS,CAACgE,KAAV,CAAgB;AAC7BnD,IAAAA,MAAM,EAAEb,SAAS,CAACiE,MAAV,CAAiBH,UADI;AAE7BhD,IAAAA,KAAK,EAAEd,SAAS,CAACiE,MAAV,CAAiBH;AAFK,GAAhB,CAHE;AAOjB9B,EAAAA,YAAY,EAAEhC,SAAS,CAAC+D,IAAV,CAAeD,UAPZ;AAQjBhB,EAAAA,WAAW,EAAE9C,SAAS,CAAC+D,IAAV,CAAeD,UARX;AASjBtD,EAAAA,WAAW,EAAER,SAAS,CAAC+D,IAAV,CAAeD,UATX;AAUjBf,EAAAA,YAAY,EAAE/C,SAAS,CAAC+D,IAVP;AAWjBf,EAAAA,cAAc,EAAEhD,SAAS,CAACkE,KAAV,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhB;AAXC,C;AADA9D,O,CAeZ+D,Y,GAAe;AACpBnC,EAAAA,YAAY,EAAE;AAAA,WAAM,IAAN;AAAA,GADM;AAEpBgB,EAAAA,cAAc,EAAE,KAFI;AAGpBD,EAAAA,YAAY,EAAE,sBAAC1C,KAAD;AAAA,WAAc,oBAAC,MAAD,eAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;AAAA,GAHM;AAIpByC,EAAAA,WAAW,EAAE,qBAACzC,KAAD;AAAA,WAAc,oBAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,OAAd;AAAA,GAJO;AAKpB+D,EAAAA,SAAS,EAAE;AAAA,QAAGjC,KAAH,QAAGA,KAAH;AAAA,WACT,OAAOA,KAAK,CAACkC,MAAb,KAAwB,QAAxB,GAAmClC,KAAK,CAACkC,MAAzC,GAAkDC,SADzC;AAAA,GALS;AAOpBjC,EAAAA,aAAa,EAAE;AACbxB,IAAAA,MAAM,EAAE,CADK;AAEbC,IAAAA,KAAK,EAAE;AAFM,GAPK;AAWpBgB,EAAAA,eAAe,EAAE;AAXG,C;SAfH1B,O;AAyLrB,IAAM8C,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC/BrB,EAAAA,SAAS,EAAE;AACTsB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,QAAQ,EAAE;AAFD,GADoB;AAK/BrB,EAAAA,KAAK,EAAE;AACLoB,IAAAA,IAAI,EAAE;AADD;AALwB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport TabBar from './TabBar';\nimport PagerDefault from './PagerDefault';\nimport { NavigationStatePropType } from './PropTypes';\nimport type {\n  Scene,\n  SceneRendererProps,\n  NavigationState,\n  Layout,\n  PagerCommonProps,\n  PagerExtraProps,\n} from './TypeDefinitions';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\ntype Props<T> = PagerCommonProps<T> &\n  PagerExtraProps & {\n    navigationState: NavigationState<T>,\n    onIndexChange: (index: number) => mixed,\n    initialLayout?: Layout,\n    renderPager: (props: *) => React.Node,\n    renderScene: (props: SceneRendererProps<T> & Scene<T>) => React.Node,\n    renderTabBar: (props: SceneRendererProps<T>) => React.Node,\n    tabBarPosition: 'top' | 'bottom',\n    useNativeDriver?: boolean,\n    style?: ViewStyleProp,\n  };\n\ntype State = {|\n  layout: Layout & { measured: boolean },\n  layoutXY: Animated.ValueXY,\n  panX: Animated.Value,\n  offsetX: Animated.Value,\n  position: any,\n  renderUnfocusedScenes: boolean,\n|};\n\nexport default class TabView<T: *> extends React.Component<Props<T>, State> {\n  static propTypes = {\n    navigationState: NavigationStatePropType.isRequired,\n    onIndexChange: PropTypes.func.isRequired,\n    initialLayout: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n    }),\n    canJumpToTab: PropTypes.func.isRequired,\n    renderPager: PropTypes.func.isRequired,\n    renderScene: PropTypes.func.isRequired,\n    renderTabBar: PropTypes.func,\n    tabBarPosition: PropTypes.oneOf(['top', 'bottom']),\n  };\n\n  static defaultProps = {\n    canJumpToTab: () => true,\n    tabBarPosition: 'top',\n    renderTabBar: (props: *) => <TabBar {...props} />,\n    renderPager: (props: *) => <PagerDefault {...props} />,\n    getTestID: ({ route }: Scene<*>) =>\n      typeof route.testID === 'string' ? route.testID : undefined,\n    initialLayout: {\n      height: 0,\n      width: 0,\n    },\n    useNativeDriver: false,\n  };\n\n  constructor(props: Props<T>) {\n    super(props);\n\n    const { navigationState } = this.props;\n    const layout = {\n      ...this.props.initialLayout,\n      measured: false,\n    };\n\n    const panX = new Animated.Value(0);\n    const offsetX = new Animated.Value(-navigationState.index * layout.width);\n    const layoutXY = new Animated.ValueXY({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: layout.width || 0.001,\n      y: layout.height || 0.001,\n    });\n    const position = Animated.multiply(\n      Animated.divide(Animated.add(panX, offsetX), layoutXY.x),\n      -1\n    );\n\n    this.state = {\n      layout,\n      layoutXY,\n      panX,\n      offsetX,\n      position,\n      renderUnfocusedScenes: false,\n    };\n  }\n\n  componentDidMount() {\n    this._mounted = true;\n\n    // Delay rendering of unfocused scenes for improved startup\n    setTimeout(() => this.setState({ renderUnfocusedScenes: true }), 0);\n  }\n\n  componentWillUnmount() {\n    this._mounted = false;\n  }\n\n  _mounted: boolean = false;\n  _nextIndex: ?number;\n\n  _renderScene = (props: SceneRendererProps<T> & Scene<T>) => {\n    return this.props.renderScene(props);\n  };\n\n  _handleLayout = (e: any) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      this.state.layout.width === width &&\n      this.state.layout.height === height\n    ) {\n      return;\n    }\n\n    this.state.offsetX.setValue(-this.props.navigationState.index * width);\n    this.state.layoutXY.setValue({\n      // This is hacky, but we need to make sure that the value is never 0\n      x: width || 0.001,\n      y: height || 0.001,\n    });\n    this.setState({\n      layout: {\n        measured: true,\n        height,\n        width,\n      },\n    });\n  };\n\n  _buildSceneRendererProps = (): SceneRendererProps<*> => ({\n    panX: this.state.panX,\n    offsetX: this.state.offsetX,\n    position: this.state.position,\n    layout: this.state.layout,\n    navigationState: this.props.navigationState,\n    jumpTo: this._jumpTo,\n    useNativeDriver: this.props.useNativeDriver === true,\n  });\n\n  _jumpTo = (key: string) => {\n    if (!this._mounted) {\n      // We are no longer mounted, this is a no-op\n      return;\n    }\n\n    const { canJumpToTab, navigationState } = this.props;\n    const index = navigationState.routes.findIndex(route => route.key === key);\n\n    if (!canJumpToTab(navigationState.routes[index])) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      this.props.onIndexChange(index);\n    }\n  };\n\n  render() {\n    const {\n      /* eslint-disable no-unused-vars */\n      navigationState,\n      onIndexChange,\n      initialLayout,\n      renderScene,\n      /* eslint-enable no-unused-vars */\n      renderPager,\n      renderTabBar,\n      tabBarPosition,\n      ...rest\n    } = this.props;\n\n    const props = this._buildSceneRendererProps();\n\n    return (\n      <View collapsable={false} style={[styles.container, this.props.style]}>\n        {tabBarPosition === 'top' && renderTabBar(props)}\n        <View onLayout={this._handleLayout} style={styles.pager}>\n          {renderPager({\n            ...props,\n            ...rest,\n            panX: this.state.panX,\n            offsetX: this.state.offsetX,\n            children: navigationState.routes.map((route, index) => {\n              const isFocused = this.props.navigationState.index === index;\n\n              let scene;\n\n              if (isFocused || this.state.renderUnfocusedScenes) {\n                scene = this._renderScene({\n                  ...props,\n                  route,\n                });\n              } else {\n                scene = <View />;\n              }\n\n              if (React.isValidElement(scene)) {\n                /* $FlowFixMe: https://github.com/facebook/flow/issues/4775 */\n                scene = React.cloneElement(scene, { key: route.key });\n              }\n\n              return scene;\n            }),\n          })}\n        </View>\n        {tabBarPosition === 'bottom' && renderTabBar(props)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  pager: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}