{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from 'firebase';\n\nfunction uploadPhoto(uri, uploadUri) {\n  return new Promise(function _callee2(res, rej) {\n    var response, blob, ref, unsubscribe;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context2.sent;\n            ref = firebase.storage().ref(uploadUri);\n            unsubscribe = ref.put(blob).on('state_changed', function (state) {}, function (err) {\n              unsubscribe();\n              rej(err);\n            }, function _callee() {\n              var url;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      unsubscribe();\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n                    case 3:\n                      url = _context.sent;\n                      res(url);\n\n                    case 5:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            });\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  });\n}\n\nexport default uploadPhoto;","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/utils/uploadPhoto.js"],"names":["firebase","uploadPhoto","uri","uploadUri","Promise","res","rej","fetch","response","blob","ref","storage","unsubscribe","put","on","state","err","getDownloadURL","url"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;;AACA,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqC;AACnC,SAAO,IAAIC,OAAJ,CAAY,kBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACMC,KAAK,CAACL,GAAD,CADX;;AAAA;AACXM,YAAAA,QADW;AAAA;AAAA,6CAEEA,QAAQ,CAACC,IAAT,EAFF;;AAAA;AAEXA,YAAAA,IAFW;AAIXC,YAAAA,GAJW,GAILV,QAAQ,CAACW,OAAT,GAAmBD,GAAnB,CAAuBP,SAAvB,CAJK;AAKXS,YAAAA,WALW,GAKGF,GAAG,CAACG,GAAJ,CAAQJ,IAAR,EAAcK,EAAd,CAClB,eADkB,EAElB,UAAAC,KAAK,EAAI,CAAE,CAFO,EAGlB,UAAAC,GAAG,EAAI;AACLJ,cAAAA,WAAW;AACXN,cAAAA,GAAG,CAACU,GAAD,CAAH;AACD,aANiB,EAOlB;AAAA;AAAA;AAAA;AAAA;AAAA;AACEJ,sBAAAA,WAAW;AADb;AAAA,uDAEoBF,GAAG,CAACO,cAAJ,EAFpB;;AAAA;AAEQC,sBAAAA,GAFR;AAGEb,sBAAAA,GAAG,CAACa,GAAD,CAAH;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAPkB,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ,CAAP;AAmBD;;AAED,eAAejB,WAAf","sourcesContent":["import firebase from 'firebase';\nfunction uploadPhoto(uri, uploadUri) {\n  return new Promise(async (res, rej) => {\n    const response = await fetch(uri);\n    const blob = await response.blob();\n\n    const ref = firebase.storage().ref(uploadUri);\n    const unsubscribe = ref.put(blob).on(\n      'state_changed',\n      state => {},\n      err => {\n        unsubscribe();\n        rej(err);\n      },\n      async () => {\n        unsubscribe();\n        const url = await ref.getDownloadURL();\n        res(url);\n      },\n    );\n  });\n}\n\nexport default uploadPhoto;\n"]},"metadata":{},"sourceType":"module"}