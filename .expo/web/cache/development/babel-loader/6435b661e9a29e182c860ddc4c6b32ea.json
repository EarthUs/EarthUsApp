{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/jangsohyeon/Desktop/EarthUsApp/screens/NewPostScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport HeaderButtons from 'react-navigation-header-buttons';\nimport Fire from \"../Fire\";\n\nvar NewPostScreen = function (_React$Component) {\n  _inherits(NewPostScreen, _React$Component);\n\n  function NewPostScreen() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewPostScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewPostScreen)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      text: ''\n    };\n    return _this;\n  }\n\n  _createClass(NewPostScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var image = this.props.navigation.state.params.image;\n      console.log(\"Document written Uri: \" + image);\n      var body = new FormData();\n      body.append(\"images_file\", image);\n      body.append(\"\", \"\\\\\");\n      body.append(\"classifier_ids\", \"garbage_1414697122\");\n      body.append(\"\", \"\\\\\");\n      fetch(\"https://api.us-south.visual-recognition.watson.cloud.ibm.com/instances/54d6afb1-4cee-4741-978c-bfd607d86702/v3/classify?version=2018-03-19\", {\n        body: body,\n        headers: {\n          Authorization: \"Basic YXBpa2V5OjlKQWxsZk1uOEpjdk9pank0M0Q3dngwbC1keVNzbC1fMmFmOXVuQVYtVnph\",\n          \"Content-Type\": \"multipart/form-data\"\n        },\n        method: \"POST\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        console.log(json);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var image = this.props.navigation.state.params.image;\n      return React.createElement(View, {\n        style: {\n          padding: 10,\n          flexDirection: 'row'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          resizeMode: 'contain',\n          aspectRatio: 1,\n          width: 72\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }), React.createElement(TextInput, {\n        multiline: true,\n        style: {\n          flex: 1,\n          paddingHorizontal: 16\n        },\n        placeholder: \"Add a neat description...\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            text: text\n          });\n\n          _this2.props.navigation.setParams({\n            text: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        }\n      }));\n    }\n  }]);\n\n  return NewPostScreen;\n}(React.Component);\n\nNewPostScreen.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: 'New Post',\n    headerRight: React.createElement(HeaderButtons, {\n      IconComponent: Ionicons,\n      iconSize: 23,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      }\n    }, React.createElement(HeaderButtons.Item, {\n      title: \"Share\",\n      onPress: function onPress() {\n        var text = navigation.getParam('text');\n        var image = navigation.getParam('image');\n\n        if (text && image) {\n          navigation.goBack();\n          Fire.shared.post({\n            text: text.trim(),\n            image: image\n          });\n        } else {\n          alert('Need valid description');\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      }\n    }))\n  };\n};\n\nexport { NewPostScreen as default };","map":{"version":3,"sources":["/Users/jangsohyeon/Desktop/EarthUsApp/screens/NewPostScreen.js"],"names":["Ionicons","React","HeaderButtons","Fire","NewPostScreen","state","text","image","props","navigation","params","console","log","body","FormData","append","fetch","headers","Authorization","method","then","response","json","padding","flexDirection","uri","resizeMode","aspectRatio","width","flex","paddingHorizontal","setState","setParams","Component","navigationOptions","title","headerRight","getParam","goBack","shared","post","trim","alert"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport React from 'react';\nimport { Image, TextInput, View } from 'react-native';\nimport HeaderButtons from 'react-navigation-header-buttons';\n\nimport Fire from '../Fire';\n\nexport default class NewPostScreen extends React.Component<Props> {\n  static navigationOptions = ({ navigation }) => ({\n    title: 'New Post',\n    headerRight: (\n      <HeaderButtons IconComponent={Ionicons} iconSize={23} color=\"black\">\n        <HeaderButtons.Item\n          title=\"Share\"\n          onPress={() => {\n            const text = navigation.getParam('text');\n            const image = navigation.getParam('image');\n            if (text && image) {\n              navigation.goBack();\n              Fire.shared.post({ text: text.trim(), image });\n            } else {\n              alert('Need valid description');\n            }\n          }}\n        />\n      </HeaderButtons>\n    ),\n  });\n\ncomponentDidMount() {\n        const { image } = this.props.navigation.state.params;\n        console.log(\"Document written Uri: \" + image);\n        const body = new FormData\n        body.append(\"images_file\", image)\n        body.append(\"\", \"\\\\\")\n        body.append(\"classifier_ids\", \"garbage_1414697122\")\n        body.append(\"\", \"\\\\\")\n\n        fetch(\"https://api.us-south.visual-recognition.watson.cloud.ibm.com/instances/54d6afb1-4cee-4741-978c-bfd607d86702/v3/classify?version=2018-03-19\", {\n          body,\n          headers: {\n            Authorization: \"Basic YXBpa2V5OjlKQWxsZk1uOEpjdk9pank0M0Q3dngwbC1keVNzbC1fMmFmOXVuQVYtVnph\",\n            \"Content-Type\": \"multipart/form-data\"\n          },\n          method: \"POST\"\n        })\n          .then(response => response.json())\n          .then(json => {\n            // 받은 json으로 기능 구현\n            console.log(json);\n          });\n}\n\n  state = { text: '' };\n\n  render() {\n    const { image } = this.props.navigation.state.params;\n    return (\n      <View style={{ padding: 10, flexDirection: 'row' }}>\n        <Image\n          source={{ uri: image }}\n          style={{ resizeMode: 'contain', aspectRatio: 1, width: 72 }}\n        />\n        <TextInput\n          multiline\n          style={{ flex: 1, paddingHorizontal: 16 }}\n          placeholder=\"Add a neat description...\"\n          onChangeText={text => {\n            this.setState({ text });\n            this.props.navigation.setParams({ text });\n          }}\n        />\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}